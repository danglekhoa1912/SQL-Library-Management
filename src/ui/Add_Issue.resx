<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btAddIssueBook.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAP/SURBVEhL3VRbTFRXFL0UseIDmiiiCVFrE50ZKqmOUVNR
        tNIqYoiY0pKY2lgrvn98ftTERKVNY9qm7/hh0lh/ZoaHBuQxlRYHm1JC0TbQRGjr3HkPjDo8HWDmHPc6
        nEsZr/w0TT+6kpXzuPeutfc++x7l/42cH/gUk7V9qlz+e8i67J9hsLo+NdrURwaLkxls6sBSi6rSeNtg
        URuItqUW50WjzfUBjScMVrXEWKbmmi+2JkmJybGx2vNyps3VQR/zTJvKXiRiro3CUBJro5X2QZqTWbOh
        wjNbSumRX+sp2G73R6509XHws/YwP9v2gB9vDvE9jiB//UaA59Z4+aqrbg7BZWUIwsVNMNJoVb+Qcnqs
        qnT9Gno0ysKRKPMPjvK+4SiLjMYYgcdiMcYJGMHhaIwFhqK8OTjE3vjOz2CCrKiUHVJOjx12Xx8+3nsz
        OF6WNZVutum6l9MzhiyO/dTDStvus8/bHzJk2RUeZj1Do8xc6eYmKhWdxx0pp0d+ndePKHc1Bv9OWTKr
        PH6tscTRjU94EZVPZEGNIOX0yCMDZLDr+0DcgebV+kRp+kdiPKuMopxwyLsbA6JkhXa/VqI2KafHZAbb
        6scMcAjmclecwTtPGFCJbkk5PfLqfJ6JBvscQTE//GPPpAYHm4LxBhZnk5TTY2O1twv1fJfqmkUt+CAS
        xZJHhfQYsNfVO8LL7/WLMzhE5kBBvV+s6V9wSDk9NpABotlPkaO/q5z9DF0SpHbEPoQwgn/1DosMDt3q
        FuvNNb6xM7hyt1bK6QEDiOxv6o7rlG11PmwLFDcE+J6bQb6bKAxkBjDAevHHDXZl/vzpJIc77BkhrOG1
        Gm+7lgFe1mq9lQywjxS0PRDvHJYZoNOwt/D8VZTISFxInAXdcWyp9d1+msEr9KP5B0fYALWptgfinRP0
        44kSSYOM9y7DYBNxJTEduuPYUOVuoZuBn2oJxZUIzKRDX14xdgdN5MmfQ6JE1CBiPefNo9+Q1GaimZgG
        XQmesPyrxvevqwMUaZT90hPhmH/b2cs++u0hP90SYnupu3BlZF9zsxXUrvhzz7SGRAbrqjx80YX6u4nJ
        ydtJbC1xETEZyhoSZppz5hg+rGrAXXPNOcAdvkHWSV3UTV2Eyw2RQgwcoiBwISKYP+idJZfuhJLmLthJ
        OuuIS4gpxPhDVoqKEhWTaWbqmvzc57a8fSTtrdOl8w5cuPR8aWV15if21vUVf3qKb/hG0Dnn6Br/siPM
        v/49zNeXdYanL8suIYWXiIuJqcRE4lORIAgzJWeKYjYnCZqKpioZGclKevqMaebcBbOyC1anvrqzMCW7
        sPjZlLQX6JvZRAhPIz4R+T8DAoEQiGi1+X8JRXkMTXq+7kYcQqwAAAAASUVORK5CYII=
</value>
  </data>
</root>